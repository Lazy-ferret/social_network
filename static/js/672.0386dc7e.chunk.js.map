{"version":3,"file":"static/js/672.0386dc7e.chunk.js","mappings":"kOACA,EAA0B,yBAA1B,EAAmE,+BAAnE,EAA2G,wBAA3G,EAA4I,wBAA5I,EAA+K,0BAA/K,EAAmN,yB,SCanN,EAVmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,gBAAKC,UAAWC,EAAW,IAAMA,EAAjC,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,QAIrC,ECHD,EANgB,SAACN,GACb,OACI,gBAAKG,UAAWC,EAAhB,SAA4BJ,EAAMO,SAEzC,EC0BKC,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEtB,OACI,SAAC,KAAD,CACIC,cAAe,CACXC,eAAgB,IAEpBF,SAAUA,EAJd,SAMK,gBAAGG,EAAH,EAAGA,aAAH,OACG,kBAAMH,SAAUG,EAAhB,WAEI,0BACI,SAAC,KAAD,CAAOC,UAAWC,EAAAA,EACdR,KAAM,iBACNS,YAAa,qBACbC,UAAUC,EAAAA,EAAAA,IAAkBC,EAAAA,IAAeC,EAAAA,EAAAA,IAAiB,UAGpE,0BACI,yCAXX,GAkBZ,EAED,EAtDgB,SAACnB,GAEb,IAAMoB,EAAQpB,EAAMqB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAAYnB,KAAMmB,EAAOnB,KAAsBJ,GAAIuB,EAAOvB,IAAtBuB,EAAOvB,GAA/C,IAC1CwB,EAAmBN,EAAMO,SAASH,KAAI,SAAAjB,GAAO,OAAI,SAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQL,GAApD,IAOnD,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKkB,KAEL,iBAAKnB,UAAWC,EAAhB,WACI,yBAAMsB,KACN,SAAClB,EAAD,CAAgBC,SAZC,SAACmB,GAC1B5B,EAAM6B,cAAcD,EAAOjB,gBAC3BiB,EAAOjB,eAAiB,EAC3B,SAaJ,E,oBCZD,GAAemB,E,QAAAA,KACXC,EAAAA,EAAAA,KAboB,SAACX,GACrB,MAAO,CACHC,YAAaD,EAAMC,YAE1B,IAE0B,SAACW,GACxB,MAAO,CACHH,cAAe,SAACI,GAAiBD,GAASE,EAAAA,EAAAA,GAAkBD,GAAc,EAEjF,IAIGE,EAAAA,EAFJ,CAGMC,E,oJClBOD,EAAmB,SAACE,GAAe,IAEtCC,EAFqC,0IAGvC,WACI,OAAKC,KAAKvC,MAAMwC,QACT,SAACH,GAAD,UAAeE,KAAKvC,SADI,SAAC,KAAD,CAAUK,GAAI,UAEhD,KANsC,GAEXoC,EAAAA,WAahC,OAFqCV,EAAAA,EAAAA,KAJF,SAACX,GAAD,MAAY,CAC3CoB,OAAQpB,EAAMsB,KAAKF,OADY,GAIET,CAAoCO,EAG5E,C","sources":["webpack://social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/WithAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ORCmc\",\"dialogs_items\":\"Dialogs_dialogs_items__6Wcva\",\"dialog\":\"Dialogs_dialog__0YVon\",\"active\":\"Dialogs_active__scGdu\",\"messages\":\"Dialogs_messages__uEqRo\",\"message\":\"Dialogs_message__cxGM0\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Field, Form } from 'react-final-form'\r\nimport { composeValidators, maxLengthCreator, requiredField } from '../../utils/validators/validators'\r\nimport { Textarea } from '../common/FormsControl/FormsControl'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const state = props.dialogsPage\r\n\r\n    const dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />)\r\n    const messagesElements = state.messages.map(message => <Message message={message.message} key={message.id} />)\r\n\r\n    const onAddNewMessageClick = (values) => {\r\n        props.onMessageSend(values.newMessageText)\r\n        values.newMessageText = ''\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageForm onSubmit={onAddNewMessageClick} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = ({ onSubmit }) => {\r\n\r\n    return (\r\n        <Form\r\n            initialValues={{\r\n                newMessageText: ''\r\n            }}\r\n            onSubmit={onSubmit}\r\n        >\r\n            {({ handleSubmit }) => (\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <div>\r\n                        <Field component={Textarea}\r\n                            name={'newMessageText'}\r\n                            placeholder={'Enter your message'}\r\n                            validate={composeValidators(requiredField, maxLengthCreator(10))}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <button>Send</button>\r\n                    </div>\r\n\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import { addMessageCreator } from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs'\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onMessageSend: (newMessage) => { dispatch(addMessageCreator(newMessage)) }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n    )(Dialogs)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    const mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}"],"names":["props","path","id","className","s","to","name","message","AddMessageForm","onSubmit","initialValues","newMessageText","handleSubmit","component","Textarea","placeholder","validate","composeValidators","requiredField","maxLengthCreator","state","dialogsPage","dialogsElements","dialogs","map","dialog","messagesElements","messages","values","onMessageSend","compose","connect","dispatch","newMessage","addMessageCreator","withAuthRedirect","Dialogs","Component","RedirectComponent","this","isAuth","React","auth"],"sourceRoot":""}